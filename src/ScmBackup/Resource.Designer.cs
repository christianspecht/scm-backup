//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScmBackup {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScmBackup.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed for {0}.
        /// </summary>
        internal static string ApiAuthenticationFailed {
            get {
                return ResourceManager.GetString("ApiAuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting repositories for source &apos;{0}&apos; from hoster &apos;{1}&apos;.
        /// </summary>
        internal static string ApiGettingRepos {
            get {
                return ResourceManager.GetString("ApiGettingRepos", resourceCulture);
            }
        }

        /*
            * Add by zISC. Gicel Cordoba Pech. 
            Chicxulub puerto Progreso, Mérida Yucatán . As of June 18, 2024
            Company: Fundación Rafael Dondé. position: INGENIERO CD CI DEVOPS
        */
        /// <summary>
        ///   Looks up a localized string similar to Getting repositories for source &apos;{0}&apos; from hoster &apos;{1}&apos;.
        /// </summary>
        internal static string ApiGettingProjects {
            get {
                return ResourceManager.GetString("ApiGettingProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough scope for source &apos;{0}&apos;. You need to set at least the &quot;repo&quot; scope, otherwise SCM Backup will backup public repositories only!.
        /// </summary>
        internal static string ApiGithubNotEnoughScope {
            get {
                return ResourceManager.GetString("ApiGithubNotEnoughScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t determine SCM type for repository: {0}.
        /// </summary>
        internal static string ApiInvalidScmType {
            get {
                return ResourceManager.GetString("ApiInvalidScmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} not found!.
        /// </summary>
        internal static string ApiInvalidUsername {
            get {
                return ResourceManager.GetString("ApiInvalidUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required permissions are missing. Make sure you have set the right scopes!.
        /// </summary>
        internal static string ApiMissingPermissions {
            get {
                return ResourceManager.GetString("ApiMissingPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ApiRepositories doesn&apos;t contain any HosterRepositories.
        /// </summary>
        internal static string ApiRepositoriesContainsNoHosterRepos {
            get {
                return ResourceManager.GetString("ApiRepositoriesContainsNoHosterRepos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SCM Backup.
        /// </summary>
        internal static string AppTitle {
            get {
                return ResourceManager.GetString("AppTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://scm-backup.org/.
        /// </summary>
        internal static string AppWebsite {
            get {
                return ResourceManager.GetString("AppWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AuthName and Name must be equal for hoster {0}. If they are different, SCM Backup will backup public repositories only!.
        /// </summary>
        internal static string AuthNameAndNameNotEqual {
            get {
                return ResourceManager.GetString("AuthNameAndNameNotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AuthName and Password are empty. Without authentication, SCM Backup will backup public repositories only!.
        /// </summary>
        internal static string AuthNameAndPasswortEmpty {
            get {
                return ResourceManager.GetString("AuthNameAndPasswortEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one of AuthName/Password is filled. Make sure you fill both or none!.
        /// </summary>
        internal static string AuthNameOrPasswortEmpty {
            get {
                return ResourceManager.GetString("AuthNameOrPasswortEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing up config files.
        /// </summary>
        internal static string BackingUpConfigs {
            get {
                return ResourceManager.GetString("BackingUpConfigs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing IScmFactory instance in BackupBase implementation for hoster {0}.
        /// </summary>
        internal static string BackupBase_IScmfactoryIsMissing {
            get {
                return ResourceManager.GetString("BackupBase_IScmfactoryIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup failed!.
        /// </summary>
        internal static string BackupFailed {
            get {
                return ResourceManager.GetString("BackupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup finished!.
        /// </summary>
        internal static string BackupFinished {
            get {
                return ResourceManager.GetString("BackupFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backups are in this directory: {0}.
        /// </summary>
        internal static string BackupFinishedDirectory {
            get {
                return ResourceManager.GetString("BackupFinishedDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   {0}: {1}.
        /// </summary>
        internal static string BackupMaker_Repo {
            get {
                return ResourceManager.GetString("BackupMaker_Repo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to        Finished.
        /// </summary>
        internal static string BackupMaker_RepoFinished {
            get {
                return ResourceManager.GetString("BackupMaker_RepoFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing up source: {0}.
        /// </summary>
        internal static string BackupMaker_Source {
            get {
                return ResourceManager.GetString("BackupMaker_Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context is null (must be injected into the child classes which inherit from CommandLineScm!).
        /// </summary>
        internal static string CommandLineScm_ContextIsNull {
            get {
                return ResourceManager.GetString("CommandLineScm_ContextIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config must not be NULL.
        /// </summary>
        internal static string ConfigIsNull {
            get {
                return ResourceManager.GetString("ConfigIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sources in the settings file must have unique titles. Title &quot;{0}&quot; appears more than once!.
        /// </summary>
        internal static string ConfigSourceDuplicateTitle {
            get {
                return ResourceManager.GetString("ConfigSourceDuplicateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConfigSource must not be NULL.
        /// </summary>
        internal static string ConfigSourceIsNull {
            get {
                return ResourceManager.GetString("ConfigSourceIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All sources in the settings file must have a title..
        /// </summary>
        internal static string ConfigSourceWithoutTitle {
            get {
                return ResourceManager.GetString("ConfigSourceWithoutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing repos from the backup folder that don&apos;t exist at the hoster:.
        /// </summary>
        internal static string DeletedRepoRemoving {
            get {
                return ResourceManager.GetString("DeletedRepoRemoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following repos are in the backup folder, but not at the hoster (probably deleted there):.
        /// </summary>
        internal static string DeletedRepoWarning {
            get {
                return ResourceManager.GetString("DeletedRepoWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory {0} doesn&apos;t exist!.
        /// </summary>
        internal static string DirectoryDoesntExist {
            get {
                return ResourceManager.GetString("DirectoryDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory is not a valid repository: {0}.
        /// </summary>
        internal static string DirectoryNoRepo {
            get {
                return ResourceManager.GetString("DirectoryNoRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application will close in {0} seconds!.
        /// </summary>
        internal static string EndSeconds {
            get {
                return ResourceManager.GetString("EndSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hoster {0} doesn&apos;t exist.
        /// </summary>
        internal static string HosterDoesntExist {
            get {
                return ResourceManager.GetString("HosterDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get hoster name from type &apos;{0}&apos; / suffix &apos;{1}&apos;: .
        /// </summary>
        internal static string HosterNameError {
            get {
                return ResourceManager.GetString("HosterNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name doesn&apos;t end with suffix.
        /// </summary>
        internal static string HosterNameError_End {
            get {
                return ResourceManager.GetString("HosterNameError_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name contains suffix multiple times.
        /// </summary>
        internal static string HosterNameError_MultiSuffix {
            get {
                return ResourceManager.GetString("HosterNameError_MultiSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name doesn&apos;t contain suffix.
        /// </summary>
        internal static string HosterNameError_NoSuffix {
            get {
                return ResourceManager.GetString("HosterNameError_NoSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http Headers: {0}.
        /// </summary>
        internal static string HttpHeaders {
            get {
                return ResourceManager.GetString("HttpHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http Request: {0}.
        /// </summary>
        internal static string HttpRequest {
            get {
                return ResourceManager.GetString("HttpRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http Result: {0}.
        /// </summary>
        internal static string HttpResult {
            get {
                return ResourceManager.GetString("HttpResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local folder is missing!.
        /// </summary>
        internal static string LocalFolderMissing {
            get {
                return ResourceManager.GetString("LocalFolderMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SCM Backup output: {0} / {1}.
        /// </summary>
        internal static string LogMailSubject {
            get {
                return ResourceManager.GetString("LogMailSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        internal static string LogMailSubjectFailed {
            get {
                return ResourceManager.GetString("LogMailSubjectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string LogMailSubjectSuccess {
            get {
                return ResourceManager.GetString("LogMailSubjectSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name is empty.
        /// </summary>
        internal static string NameEmpty {
            get {
                return ResourceManager.GetString("NameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source configured!.
        /// </summary>
        internal static string NoSourceConfigured {
            get {
                return ResourceManager.GetString("NoSourceConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Reading config.
        /// </summary>
        internal static string ReadingConfig {
            get {
                return ResourceManager.GetString("ReadingConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Return.
        /// </summary>
        internal static string Return {
            get {
                return ResourceManager.GetString("Return", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SCM {0} doesn&apos;t exist.
        /// </summary>
        internal static string ScmDoesntExist {
            get {
                return ResourceManager.GetString("ScmDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was NOT found.
        /// </summary>
        internal static string ScmNotOnThisComputer {
            get {
                return ResourceManager.GetString("ScmNotOnThisComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} .
        /// </summary>
        internal static string ScmOnThisComputer {
            get {
                return ResourceManager.GetString("ScmOnThisComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target directory is not empty: {0}.
        /// </summary>
        internal static string ScmTargetDirectoryNotEmpty {
            get {
                return ResourceManager.GetString("ScmTargetDirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one SCM is missing on this machine!.
        /// </summary>
        internal static string ScmValidatorError {
            get {
                return ResourceManager.GetString("ScmValidatorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to find SCMs on this machine....
        /// </summary>
        internal static string ScmValidatorStarting {
            get {
                return ResourceManager.GetString("ScmValidatorStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Starting backup.
        /// </summary>
        internal static string StartingBackup {
            get {
                return ResourceManager.GetString("StartingBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating system: {0}.
        /// </summary>
        internal static string SystemOS {
            get {
                return ResourceManager.GetString("SystemOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t register {0} in the HosterFactory because it doesn&apos;t implement IHoster.
        /// </summary>
        internal static string TypeIsNoIHoster {
            get {
                return ResourceManager.GetString("TypeIsNoIHoster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t register {0} in the ScmFactory because it doesn&apos;t implement IScm.
        /// </summary>
        internal static string TypeIsNoIScm {
            get {
                return ResourceManager.GetString("TypeIsNoIScm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to wrong hoster: {0}.
        /// </summary>
        internal static string WrongHoster {
            get {
                return ResourceManager.GetString("WrongHoster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to wrong type: {0}.
        /// </summary>
        internal static string WrongType {
            get {
                return ResourceManager.GetString("WrongType", resourceCulture);
            }
        }

        /*
            * Add by ISC. Gicel Cordoba Pech. 
            Chicxulub puerto Progreso, Mérida Yucatán . As of June 18, 2024
            Company: Fundación Rafael Dondé. position: INGENIERO CD CI DEVOPS
        */
        /// <summary>
        ///   Looks up a localized string similar to wrong type: {0}.
        /// </summary>
        internal static string BackupTypeByRepository {
            get {
                return ResourceManager.GetString("BackupTypeByRepository", resourceCulture);
            }
        }

        /*
            * Add by ISC. Gicel Cordoba Pech. 
            Chicxulub puerto Progreso, Mérida Yucatán . As of June 18, 2024
            Company: Fundación Rafael Dondé. position: INGENIERO CD CI DEVOPS
        */
        /// <summary>
        ///   Looks up a localized string similar to wrong type: {0}.
        /// </summary>
        internal static string BackupTypeByProjects {
            get {
                return ResourceManager.GetString("BackupTypeByProjects", resourceCulture);
            }
        }

        /*
            * Add by ISC. Gicel Cordoba Pech. 
            Chicxulub puerto Progreso, Mérida Yucatán . As of June 18, 2024
            Company: Fundación Rafael Dondé. position: INGENIERO CD CI DEVOPS
        */
        /// <summary>
        ///   Looks up a localized string similar to wrong type: {0}.
        /// </summary>
        internal static string DadLovesThem {
            get {
                return ResourceManager.GetString("DadLovesThem", resourceCulture);
            }
        }

        /*
            * Add by ISC. Gicel Cordoba Pech. 
            Chicxulub puerto Progreso, Mérida Yucatán . As of June 18, 2024
            Company: Fundación Rafael Dondé. position: INGENIERO CD CI DEVOPS
        */
        /// <summary>
        ///   Looks up a localized string similar to wrong type: {0}.
        /// </summary>
        internal static string Vacation {
            get {
                return ResourceManager.GetString("Vacation", resourceCulture);
            }
        }
    }
}
